version: "3.8"

services:
    database:
        image: postgres:15.1-alpine
        container_name: postgres_15
        restart: always
        volumes:
          - ../../pg_data:/var/lib/postgresql/data/
        environment:
              POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
              POSTGRES_USER: ${POSTGRES_USER}
              POSTGRES_DB: ${POSTGRES_DB}
              POSTGRES_INITDB_ARGS: "-A md5"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
            interval: 5s
            timeout: 10s
            retries: 10
            start_period: 10s
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        env_file:
            - ../../.env
    web_app:
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        container_name: django_application
        ports:
            - "${DJANGO_PORT}:8000"
        depends_on:
            database:
                condition: service_healthy
            redis:
                condition: service_healthy
        volumes:
            - ../../src:/file_processing
        env_file:
            - ../../.env
        command: >
            sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn -w 9 --bind 0.0.0.0:${DJANGO_PORT} file_processing.wsgi:application"
    redis:
        image: redis:7.2-alpine
        hostname: redis
        container_name: redis
        ports:
            - "${REDIS_PORT}:${REDIS_PORT}"
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 5s
            timeout: 10s
            retries: 10
    worker1:
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        hostname: worker1
        container_name: worker-1
        env_file:
            - ../../.env
        command: "celery -A file_processing worker --loglevel=INFO --logfile=logs/celery.log"
        volumes:
            - ../../src:/file_processing
        depends_on:
            web_app:
                condition: service_started
            redis:
                condition: service_healthy
            database:
                condition: service_healthy
    worker2:
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        hostname: worker2
        container_name: worker-2
        env_file:
            - ../../.env
        command: "celery -A file_processing worker --loglevel=INFO --logfile=logs/celery.log"
        volumes:
            - ../../src:/file_processing
        depends_on:
            web_app:
                condition: service_started
    flower:
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        command: celery -A file_processing flower
        container_name: flower
        ports:
            - "5555:5555"
        volumes:
            - ../../src:/file_processing
        env_file:
            - ../../.env
        depends_on:
            web_app:
                condition: service_started
            worker1:
                condition: service_started
            worker2:
                condition: service_started
    nginx:
        build:
            context: ../../
            dockerfile: ./docker/nginx/Dockerfile
        container_name: nginx
        volumes:
            - ../../src/static:/file_processing/static
            - ../../src/media:/file_processing/media
        depends_on:
            - web_app
        ports:
            -   target: 80
                published: 80
                protocol: tcp
                mode: host